<?xml version="1.0" encoding="iso-8859-1"?>
<fpdoc-descriptions>
  <package name="fpGUI">
    <!--
  ====================================================================
    OpenSoftStyle
  ====================================================================
-->
    <module name="OpenSoftStyle">
      <short>Defines a custom GUI Style called OpenSoft.</short>
      <descr><printshort id="OpenSoftStyle" />. This started as a proof-of-concept
        on how a custom style can be created. In the future this will be used
        as the default style in my company products.</descr>
      <!-- unresolved type reference Visibility: default -->
      <element name="Classes">
        <short></short>
        <descr></descr>
        <seealso></seealso>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="fpGUI">
        <short></short>
        <descr></descr>
        <seealso></seealso>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="gfxBase">
        <short></short>
        <descr></descr>
        <seealso></seealso>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="fpGFX">
        <short></short>
        <descr></descr>
        <seealso></seealso>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TGradientDirection">
        <short></short>
        <descr></descr>
        <seealso></seealso>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGradientDirection.gdTopToBottom">
        <short></short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGradientDirection.gdBottomToTop">
        <short></short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGradientDirection.gdLeftToRight">
        <short></short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGradientDirection.gdRightToLeft">
        <short></short>
      </element>
      <!-- function type Visibility: default -->
      <element name="TCalcGradientEndX">
        <short></short>
        <descr></descr>
        <seealso></seealso>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCalcGradientEndX.Result">
        <short></short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCalcGradientEndX.Y">
        <short></short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCalcGradientEndX.H">
        <short></short>
      </element>
      <!-- object Visibility: default -->
      <element name="TOpenSoftStyle">
        <short>Defines a custom GUI Style called OpenSoft.</short>
        <descr><printshort id="OpenSoftStyle" />. This started as a proof-of-concept
          on how a custom style can be created. In the future this will be used
          as the default style in my company products.</descr>
        <errors></errors>
        <seealso></seealso>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TOpenSoftStyle.PaintGradient">
        <short></short>
        <descr></descr>
        <errors></errors>
        <seealso></seealso>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOpenSoftStyle.PaintGradient.pCanvas">
        <short></short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOpenSoftStyle.PaintGradient.R">
        <short></short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOpenSoftStyle.PaintGradient.StartColor">
        <short></short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOpenSoftStyle.PaintGradient.EndColor">
        <short></short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOpenSoftStyle.PaintGradient.Direction">
        <short></short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOpenSoftStyle.PaintGradient.GradLines">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TOpenSoftStyle.GetGUIColor">
        <short></short>
        <descr></descr>
        <errors></errors>
        <seealso></seealso>
      </element>
      <!-- function result Visibility: default -->
      <element name="TOpenSoftStyle.GetGUIColor.Result">
        <short></short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOpenSoftStyle.GetGUIColor.Color">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TOpenSoftStyle.DrawGroupBox">
        <short></short>
        <descr></descr>
        <errors></errors>
        <seealso></seealso>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOpenSoftStyle.DrawGroupBox.Canvas">
        <short></short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOpenSoftStyle.DrawGroupBox.ARect">
        <short></short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOpenSoftStyle.DrawGroupBox.ALabel">
        <short></short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOpenSoftStyle.DrawGroupBox.WidgetState">
        <short></short>
      </element>
    </module>
    <!-- OpenSoftStyle -->
  </package>
</fpdoc-descriptions>
