<?xml version="1.0"?>
<fpdoc-descriptions>
  <package name="CoreLib">
    <!--
  ====================================================================
    gfxbase
  ====================================================================
-->
    <module name="fpg_base">
      <short>The base unit and starting point of fpGUI</short>
      <descr>
        <p>This unit contains all the abstract classes for the CoreLib code
of fpGUI. It also defines many types and constants used throughout the toolkit.
</p>
        <p>When implementing support for a completely new windowing system 
(eg: Carbon used in Mac OS-X) you would implement all the abstract methods
defined in this unit.
</p>
      </descr>

      <!-- alias type Visibility: default -->
      <element name="TfpgCoord">
        <short>A custom type used to represent X and Y coordinates.</short>
        <descr>Internally TfpgCoord is actually a Integer type. We created a custom 
alias type for use in fpGUI in the event that we might want to change the 
underlying type in the future. Example to floating points.
</descr>
        <seealso/>
      </element>
      <!-- alias type Visibility: default -->
      <element name="TfpgColor">
        <short>Represents a color in integer format.</short>
        <descr>
          <p>TfpgColor is always in RRGGBB (Red, Green, Blue) format, no matter the
operating system.
</p>
          <p>The <var>gfxbase</var> unit also contains definitions of many useful color 
constants. It defines the standard predefined Delphi colors (like clRed, 
clMagenta etc.), the 140 websafe colors using the defacto standard names as 
used by Netscape and Internet Explorer web browsers. As well as some internal 
color constants used by many GUI components (like clText, clWindowBackground 
etc.).
</p>
        </descr>
        <seealso/>
      </element>
      <!-- record type Visibility: default -->
      <element name="TRGBTriple">
        <short>A record structure holding the RGBA values of a color.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TRGBTriple.Red">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TRGBTriple.Green">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TRGBTriple.Blue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TRGBTriple.Alpha">
        <short>Alpha support has not really been implemented in fpGUI yet.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TWindowType">
        <short>Enum type defining what types of windows can be created.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TWindowType.wtChild">
        <short>The window being created is a child on another window. This normally
means no titlebar or window borders are going to be created.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TWindowType.wtWindow">
        <short>This would specify a standard window with titlebar and window borders.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TWindowType.wtModalForm">
        <short>This windows is the same as <link id="TWindowType.wtWindow">wtWindow</link>, 
but grabs the input focus until it has closed.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TWindowType.wtPopup">
        <short>This window will normally not have a titlebar or window borders and will 
appear above other windows. It is used for example in the dropdown window of a 
ComboBox or a tooltip window.</short>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TWindowAttribute">
        <short>An enum types defining extra attributes of a window.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TWindowAttribute.waSizeable">
        <short>If this attribute is set, the window will be resizeable by the user.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TWindowAttribute.waAutoPos">
        <short>If this attribute is set, the underlying window manager will decide where
the window will be placed on the screen it it becomes visible for the first time.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TWindowAttribute.waScreenCenterPos">
        <short>If this attribute is set, the window will be centred on the screen when
it is shown for the first time.</short>
      </element>
      <!-- set type Visibility: default -->
      <element name="TWindowAttributes">
        <short>A set of TWindowAttribute types.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TMouseCursor">
        <short>Enum types of the available mouse cursor shapes.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMouseCursor.mcDefault">
        <short>Normally the default arrow cursor.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMouseCursor.mcArrow">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMouseCursor.mcCross">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMouseCursor.mcIBeam">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMouseCursor.mcSizeEW">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMouseCursor.mcSizeNS">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMouseCursor.mcSizeNWSE">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMouseCursor.mcSizeNESW">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMouseCursor.mcSizeSWNE">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMouseCursor.mcSizeSENW">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMouseCursor.mcMove">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMouseCursor.mcHourGlass">
        <short>Normally a hourglass or watch representing a busy state.</short>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TGradientDirection">
        <short>Enum types defining how a gradient must be painted</short>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGradientDirection.gdVertical">
        <short>Defines that the gradient must be painted vertically.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGradientDirection.gdHorizontal">
        <short>Defines that the gradient must be painted horizontally.</short>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TClipboardKeyType">
        <short>Represents the clipboard function being triggered by some keyboard key combination.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TClipboardKeyType.ckNone">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TClipboardKeyType.ckCopy">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TClipboardKeyType.ckPaste">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TClipboardKeyType.ckCut">
        <short/>
      </element>
      <!-- constant Visibility: default -->
      <element name="MOUSE_LEFT">
        <short>Constant representing the left mouse button.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="MOUSE_RIGHT">
        <short>Constant representing the right mouse button.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="MOUSE_MIDDLE">
        <short>Constant representing the middle mouse button.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_PAINT">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_ACTIVATE">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_DEACTIVATE">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_KEYPRESS">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_KEYRELEASE">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_KEYCHAR">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_MOUSEDOWN">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_MOUSEUP">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_MOUSEMOVE">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_DOUBLECLICK">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_MOUSEENTER">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_MOUSEEXIT">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_CLOSE">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_SCROLL">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_RESIZE">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_MOVE">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_POPUPCLOSE">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPGM_KILLME">
        <short>Platform independent messages used by fpGUI.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyNul">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyBackSpace">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyTab">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyLinefeed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyReturn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyEscape">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDelete">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keySpace">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyVoid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyBreak">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyScrollForw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyScrollBack">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyBoot">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyCompose">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keySAK">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyUndo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyRedo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyCancel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPrintScreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyExecute">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyFind">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyBegin">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyClear">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyInsert">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keySelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyMacro">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyHelp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPause">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keySysRq">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyModeSwitch">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyLeft">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyRight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPrior">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPageUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyNext">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPageDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyHome">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyEnd">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF0">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF1">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF2">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF3">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF4">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF5">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF6">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF7">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF8">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF9">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF10">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF11">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF12">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF13">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF14">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF15">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF16">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF17">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF18">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF19">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF20">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF21">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF22">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF23">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF24">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF25">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF26">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF27">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF28">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF29">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF30">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF31">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF32">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF33">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF34">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF35">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF36">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF37">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF38">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF39">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF40">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF41">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF42">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF43">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF44">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF45">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF46">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF47">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF48">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF49">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF50">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF51">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF52">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF53">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF54">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF55">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF56">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF57">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF58">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF59">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF60">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF61">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF62">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF63">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyF64">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyP0">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyP1">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyP2">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyP3">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyP4">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyP5">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyP6">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyP7">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyP8">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyP9">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPA">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPB">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPC">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPD">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPE">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPF">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPPlus">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPMinus">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPSlash">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPAsterisk">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPStar">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPEqual">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPSeparator">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPDecimal">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPParenLeft">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPParenRight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPSpace">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPTab">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPPlusMinus">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPBegin">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPF1">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPF2">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPF3">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPF4">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPF5">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPF6">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPF7">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPF8">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPF9">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyShift">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyCtrl">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyAlt">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyMeta">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keySuper">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyHyper">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyAltGr">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyCaps">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyNum">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyScroll">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyShiftL">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyShiftR">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyCtrlL">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyCtrlR">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyAltL">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyAltR">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyMetaL">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyMetaR">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keySuperL">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keySuperR">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyHyperL">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyHyperR">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyShiftLock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyCtrlLock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyAltLock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyMetaLock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keySuperLock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyHyperLock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyAltGrLock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyCapsLock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyNumLock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyScrollLock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadRing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadCaron">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadOgonek">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadIota">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadDoubleAcute">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadBreve">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadAboveDot">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadBelowDot">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadVoicedSound">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadSemiVoicedSound">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadAcute">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadCedilla">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadCircumflex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadDiaeresis">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadGrave">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadTilde">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDeadMacron">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyNIL">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyEcuSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyColonSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyCruzeiroSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyFFrancSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyLiraSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyMillSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyNairaSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyPesetaSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyRupeeSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyWonSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyNewSheqelSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyDongSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="keyEuroSign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FPG_DEFAULT_FONT_DESC">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="UserNamedColorStart">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clAqua">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clBlack">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clCream">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDkGray">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clFuchsia">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clGray">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLime">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLtGray">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMaroon">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clNavy">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clOlive">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clPurple">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clRed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSilver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clTeal">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clWhite">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clYellow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clNone">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDefault">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMoneyGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSkyBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMedGray">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clWindowBackground">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clBoxColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clButtonFace">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clShadow1">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clShadow2">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clHilite1">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clHilite2">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clText1">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clText2">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clText3">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clText4">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSelectionText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clInactiveSel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clInactiveSelText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clScrollBar">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clListBox">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clGridLines">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clGridHeader">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clWidgetFrame">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clInactiveWgFrame">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clTextCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clChoiceListBox">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clUnset">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMenuText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMenuDisabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clAliceBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clAntiqueWhite">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clAquamarine">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clAzure">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clBeige">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clBisque">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clBlanchedAlmond">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clBlueViolet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clBrown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clBurlyWood">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clCadetBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clChartreuse">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clChocolate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clCoral">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clCornflowerBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clCornsilk">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clCrimson">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clCyan">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkCyan">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkGoldenrod">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkGray">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkKhaki">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkMagenta">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkOliveGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkOrange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkOrchid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkRed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkSalmon">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkSeaGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkSlateBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkSlateGray">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkTurquoise">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDarkViolet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDeepPink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDeepSkyBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDimGray">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clDodgerBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clFireBrick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clFloralWhite">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clForestGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clGainsboro">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clGhostWhite">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clGold">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clGoldenrod">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clGreenYellow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clHoneydew">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clHotPink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clIndianRed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clIndigo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clIvory">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clKhaki">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLavender">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLavenderBlush">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLawnGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLemonChiffon">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightCoral">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightCyan">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightGoldenrodYellow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightGrey">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightPink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightSalmon">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightSeaGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightSkyBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightSlateGray">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightSteelBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLightYellow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLimeGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clLinen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMagenta">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMediumAquamarine">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMediumBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMediumOrchid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMediumPurple">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMediumSeaGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMediumSlateBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMediumSpringGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMediumTurquoise">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMediumVioletRed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMidnightBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMintCream">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMistyRose">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clMoccasin">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clNavajoWhite">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clOldLace">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clOliveDrab">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clOrange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clOrangeRed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clOrchid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clPaleGoldenrod">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clPaleGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clPaleTurquoise">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clPaleVioletRed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clPaleBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clPapayaWhip">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clPeachPuff">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clPeru">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clPink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clPlum">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clPowderBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clRosyBrown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clRoyalBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSaddleBrown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSalmon">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSandyBrown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSeaGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSeashell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSienna">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSkyBlue2">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSlateBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSlateGray">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSnow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSpringGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clSteelBlue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clTan">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clThistle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clTomato">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clTurquoise">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clViolet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clWheat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clWhiteSmoke">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="clYellowGreen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TfpgRect">
        <short>A graphical (pixel based) rectangle structure used throughout fpGUI.</short>
        <descr><p>Note that this structure is not a class, so static allocations are 
allowed. This makes it much easier to use in Widgets and in fpGUI internal
messages.</p>
<p>
Think of the pixel screen/grid like the grid of a spreadsheet (or as a magnified look of the top corner of your screen).
</p>
<pre>.
     0   1
   +---+---+---
0  | x |   |
   +---+---+---
1  |   |   |
   +---+---+---
2  |   |   |
   +---+---+---
   |   |   |
</pre>
<p>
x is at (0,0). A pixel is always 1x1, you don't get smaller (we are not using sub-pixels like on LCD screens, because they don't apply to all screens).  
</p>
<p>
So with that example, Width = 1 pixel and Height = 1 pixel. In the case of 
Classes.Bounds() the Right and Bottom values are (1,1) which looking at the 
above image will be wrong, the pixel only covers one block, so in a screen/pixel 
environment, Right, Bottom is also (0,0), the same as Top/Left. This is what
TfpgRect.Right and TfpgRect.Bottom will report.
</p>
<pre>.
     0   1
   +---+---+---
0  | x | x |
   +---+---+---
1  | x | x |
   +---+---+---
2  |   |   |
   +---+---+---
   |   |   |
</pre>
<p>
In this example we have a rectangle. Top/Left = (0,0) and Bottom/Right = (1,1). 
This means Width = 2 pixels and Height = 2 pixels. Clearly visible in the image 
above.
</p>
<p>
But if we call Classes.Bounds(0,0,2,2) it reports Bottom/Right as (2,2) which 
is wrong (again looking at the image above as reference). This is my point. 
Bounds() cannot be used in this case in a graphical environment.
</p>
<p>
The reason I don't use a grid layout as shown below, is 
because if the mouse is over the rectangle containing x, the OS (graphics system) reports its 
position as (0,0). You don't have to have the mouse pointer over the intersecting 
lines at (0,0) as indicated in the image below. The whole square containing 
the x is referenced as (0,0), hence the grid layout as show in the images above,
and what fpGUI uses. The same grid layout as used in TfpgStringGrid or any 
Spreadsheet program etc.
</p>
<pre>.
   0   1   2
0  +---+---+---
   | x |   |
1  +---+---+---
   |   |   |
2  +---+---+---
   |   |   |
3  +---+---+---
   |   |   |
</pre>
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgRect.Top">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgRect.Left">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgRect.Width">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgRect.Height">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="TfpgRect.SetRect">
        <short>A convenience function to quickly set a rectangle structure.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgRect.SetRect.aleft">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgRect.SetRect.atop">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgRect.SetRect.awidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgRect.SetRect.aheight">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="TfpgRect.Bottom">
        <short>Calculates and returns the bottom position of the rectangle.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgRect.Bottom.Result">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="TfpgRect.Right">
        <short>Calculates and returns the Right most position of the rectangle.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgRect.Right.Result">
        <short/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="TfpgRect.SetBottom">
        <short>Sets the bottom value and recalculates the Height value.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgRect.SetBottom.Value">
        <short/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="TfpgRect.SetRight">
        <short>Sets the Right value and recalculates the Width value.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgRect.SetRight.Value">
        <short/>
      </element>
      <!-- record type Visibility: default -->
      <element name="TfpgMsgParmMouse">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMsgParmMouse.x">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMsgParmMouse.y">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMsgParmMouse.Buttons">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMsgParmMouse.shiftstate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMsgParmMouse.delta">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- record type Visibility: default -->
      <element name="TfpgMsgParmKeyboard">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMsgParmKeyboard.keycode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMsgParmKeyboard.keychar">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMsgParmKeyboard.shiftstate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- record type Visibility: default -->
      <element name="TfpgMessageParams">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMessageParams.mouse">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMessageParams.keyboard">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMessageParams.rect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- record type Visibility: default -->
      <element name="TfpgMessageRec">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMessageRec.MsgCode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMessageRec.Sender">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMessageRec.Dest">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TfpgMessageRec.Params">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="PfpgMessageRec">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TfpgLineStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TfpgLineStyle.lsSolid">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TfpgLineStyle.lsDash">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TfpgLineStyle.lsDot">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TfpgLineStyle.lsDashDot">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TfpgLineStyle.lsDashDotDot">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TfpgWindowBase">
        <short>Abstract class use for representing a Window or Widget</short>
        <descr>fpGUI is a <i>Windowed</i> toolkit. By that we mean that every component
or widget has a window handle. Widgets are essentially embedded windows without
titlebars or borders inside a main parent window.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TfpgCanvasBase">
        <short>Abstract class used to represent a Canvas for painting</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TfpgImageBase">
        <short>Abstract class used to represent a Image</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TfpgImageBase.GetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgImageBase.GetColor.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.GetColor.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.GetColor.y">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TfpgImageBase.SetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.SetColor.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.SetColor.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.SetColor.AValue">
        <short/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgImageBase.FWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgImageBase.FHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgImageBase.FColorDepth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgImageBase.FMasked">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgImageBase.FImageData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgImageBase.FImageDataSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgImageBase.FMaskData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgImageBase.FMaskDataSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgImageBase.DoFreeImage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgImageBase.DoInitImage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.DoInitImage.acolordepth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.DoInitImage.awidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.DoInitImage.aheight">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.DoInitImage.aimgdata">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgImageBase.DoInitImageMask">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.DoInitImageMask.awidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.DoInitImageMask.aheight">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.DoInitImageMask.aimgdata">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TfpgImageBase.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TfpgImageBase.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgImageBase.Invert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgImageBase.FreeImage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgImageBase.AllocateImage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.AllocateImage.acolordepth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.AllocateImage.awidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.AllocateImage.aheight">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgImageBase.AllocateMask">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgImageBase.CreateMaskFromSample">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.CreateMaskFromSample.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.CreateMaskFromSample.y">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgImageBase.UpdateImage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgImageBase.ImageData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgImageBase.ImageDataSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgImageBase.MaskData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgImageBase.MaskDataSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgImageBase.Width">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgImageBase.Height">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgImageBase.ColorDepth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgImageBase.Masked">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgImageBase.Colors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.Colors.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgImageBase.Colors.y">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TfpgFontResourceBase">
        <short>Encapsulates the resources of a font</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgFontResourceBase.GetAscent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgFontResourceBase.GetAscent.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgFontResourceBase.GetDescent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgFontResourceBase.GetDescent.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgFontResourceBase.GetHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgFontResourceBase.GetHeight.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgFontResourceBase.GetTextWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgFontResourceBase.GetTextWidth.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgFontResourceBase.GetTextWidth.txt">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TfpgFontBase">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgFontBase.FFontDesc">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgFontBase.FFontRes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgFontBase.TextWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgFontBase.TextWidth.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgFontBase.TextWidth.txt">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgFontBase.Ascent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgFontBase.Ascent.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgFontBase.Descent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgFontBase.Descent.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgFontBase.Height">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgFontBase.Height.Result">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgFontBase.FontDesc">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgFontBase.FontRes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgFontBase.Handle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TfpgCustomInterpolation">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgCustomInterpolation.FCanvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgCustomInterpolation.FImage">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCustomInterpolation.Initialize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCustomInterpolation.Initialize.AImage">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCustomInterpolation.Initialize.ACanvas">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCustomInterpolation.Execute">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCustomInterpolation.Execute.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCustomInterpolation.Execute.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCustomInterpolation.Execute.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCustomInterpolation.Execute.h">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgCustomInterpolation.Canvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgCustomInterpolation.Image">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TfpgBaseInterpolation">
        <short>A abstract class representing a base Interpolation filter.</short>
        <descr>This is used as the base class to implement Interpolation filters like
Gaussian, Sinc etc... These decendant filters are used in the 
<link id="TfpgCanvasBase.StretchDraw">Canvas.StretchDraw</link> function.
</descr>
        <errors/>
        <seealso>
          <link id="TfpgCanvasBase.StretchDraw">Canvas.StretchDraw</link>
        </seealso>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgBaseInterpolation.xfactor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgBaseInterpolation.yfactor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgBaseInterpolation.xsupport">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgBaseInterpolation.ysupport">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgBaseInterpolation.tempimage">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TfpgBaseInterpolation.Horizontal">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgBaseInterpolation.Horizontal.width">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TfpgBaseInterpolation.Vertical">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgBaseInterpolation.Vertical.dx">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgBaseInterpolation.Vertical.dy">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgBaseInterpolation.Vertical.width">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgBaseInterpolation.Vertical.height">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgBaseInterpolation.Execute">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgBaseInterpolation.Execute.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgBaseInterpolation.Execute.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgBaseInterpolation.Execute.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgBaseInterpolation.Execute.h">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TfpgBaseInterpolation.Filter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgBaseInterpolation.Filter.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgBaseInterpolation.Filter.x">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TfpgBaseInterpolation.MaxSupport">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgBaseInterpolation.MaxSupport.Result">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TfpgBaseInterpolation.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TfpgMitchelInterpolation">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TfpgMitchelInterpolation.Filter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgMitchelInterpolation.Filter.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgMitchelInterpolation.Filter.x">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TfpgMitchelInterpolation.MaxSupport">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgMitchelInterpolation.MaxSupport.Result">
        <short/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgCanvasBase.FFastDoubleBuffer">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgCanvasBase.FInterpolation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TfpgCanvasBase.SetInterpolation">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.SetInterpolation.AValue">
        <short/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgCanvasBase.FBufferedDraw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgCanvasBase.FBeginDrawCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgCanvasBase.FWindow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgCanvasBase.FColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgCanvasBase.FTextColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgCanvasBase.FLineWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgCanvasBase.FLineStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgCanvasBase.FFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgCanvasBase.FPersistentResources">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoSetFontRes">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoSetFontRes.fntres">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoSetTextColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoSetTextColor.cl">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoSetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoSetColor.cl">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoSetLineStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoSetLineStyle.awidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoSetLineStyle.astyle">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoGetWinRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoGetWinRect.r">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoFillRectangle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillRectangle.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillRectangle.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillRectangle.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillRectangle.h">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoXORFillRectangle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoXORFillRectangle.col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoXORFillRectangle.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoXORFillRectangle.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoXORFillRectangle.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoXORFillRectangle.h">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoFillTriangle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillTriangle.x1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillTriangle.y1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillTriangle.x2">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillTriangle.y2">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillTriangle.x3">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillTriangle.y3">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoDrawRectangle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawRectangle.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawRectangle.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawRectangle.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawRectangle.h">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoDrawLine">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawLine.x1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawLine.y1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawLine.x2">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawLine.y2">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoDrawImagePart">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawImagePart.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawImagePart.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawImagePart.img">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawImagePart.xi">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawImagePart.yi">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawImagePart.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawImagePart.h">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoDrawString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawString.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawString.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawString.txt">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoSetClipRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoSetClipRect.ARect">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TfpgCanvasBase.DoGetClipRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgCanvasBase.DoGetClipRect.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoAddClipRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoAddClipRect.ARect">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoClearClipRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoBeginDraw">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoBeginDraw.awin">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoBeginDraw.buffered">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoPutBufferToScreen">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoPutBufferToScreen.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoPutBufferToScreen.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoPutBufferToScreen.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoPutBufferToScreen.h">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoEndDraw">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TfpgCanvasBase.GetPixel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgCanvasBase.GetPixel.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.GetPixel.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.GetPixel.Y">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.SetPixel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.SetPixel.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.SetPixel.Y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.SetPixel.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoDrawArc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawArc.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawArc.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawArc.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawArc.h">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawArc.a1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoDrawArc.a2">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgCanvasBase.DoFillArc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillArc.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillArc.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillArc.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillArc.h">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillArc.a1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DoFillArc.a2">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TfpgCanvasBase.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TfpgCanvasBase.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.DrawRectangle">
        <short>Draws a rectangle.</short>
        <descr>
          <printshort id="TfpgCanvasBase.DrawRectangle"/> You can specify the size of the rectangle via X, Y, Width and Height parameters or via a TfpgRect parameter.</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawRectangle.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawRectangle.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawRectangle.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawRectangle.h">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawRectangle.r">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.DrawLine">
        <short>Draws a line</short>
        <descr>
          <printshort id="TfpgCanvasbase.DrawLine"/>. This method draws a line from (x1,y1) to (x2,y2), but does not draw the last pixel. All supported backends follow the Microsoft API and doesn't draw the last pixel. This optimises consecutive lines being drawn without overlapping pixels.</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawLine.x1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawLine.y1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawLine.x2">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawLine.y2">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.DrawImage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawImage.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawImage.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawImage.img">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.DrawImagePart">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawImagePart.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawImagePart.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawImagePart.img">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawImagePart.xi">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawImagePart.yi">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawImagePart.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawImagePart.h">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.DrawArc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawArc.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawArc.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawArc.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawArc.h">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawArc.a1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawArc.a2">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.StretchDraw">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.StretchDraw.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.StretchDraw.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.StretchDraw.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.StretchDraw.h">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.StretchDraw.ASource">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.CopyRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.CopyRect.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.CopyRect.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.CopyRect.ACanvas">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.CopyRect.SourceRect">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.DrawString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawString.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawString.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.DrawString.txt">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.FillRectangle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillRectangle.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillRectangle.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillRectangle.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillRectangle.h">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillRectangle.r">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.FillTriangle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillTriangle.x1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillTriangle.y1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillTriangle.x2">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillTriangle.y2">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillTriangle.x3">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillTriangle.y3">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.FillArc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillArc.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillArc.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillArc.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillArc.h">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillArc.a1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.FillArc.a2">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.GradientFill">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.GradientFill.ARect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.GradientFill.AStart">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.GradientFill.AStop">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.GradientFill.ADirection">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.XORFillRectangle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.XORFillRectangle.col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.XORFillRectangle.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.XORFillRectangle.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.XORFillRectangle.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.XORFillRectangle.h">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.XORFillRectangle.r">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.SetClipRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.SetClipRect.ARect">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgCanvasBase.GetClipRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgCanvasBase.GetClipRect.Result">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.AddClipRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.AddClipRect.ARect">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.ClearClipRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.Clear.AColor">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.GetWinRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.GetWinRect.r">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.SetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.SetColor.AColor">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.SetTextColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.SetTextColor.AColor">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.SetLineStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.SetLineStyle.AWidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.SetLineStyle.AStyle">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.SetFont">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.SetFont.AFont">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.BeginDraw">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.BeginDraw.ABuffered">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.EndDraw">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.EndDraw.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.EndDraw.y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.EndDraw.w">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.EndDraw.h">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.EndDraw.ARect">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgCanvasBase.FreeResources">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgCanvasBase.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgCanvasBase.TextColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgCanvasBase.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgCanvasBase.Pixels">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.Pixels.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgCanvasBase.Pixels.Y">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgCanvasBase.InterpolationFilter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgCanvasBase.FastDoubleBuffer">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgCanvasBase.LineStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgCanvasBase.LineWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgWindowBase.FParent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TfpgWindowBase.SetMouseCursor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.SetMouseCursor.AValue">
        <short/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgWindowBase.FMouseCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgWindowBase.FWindowType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgWindowBase.FWindowAttributes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgWindowBase.FTop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgWindowBase.FLeft">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgWindowBase.FWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgWindowBase.FHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgWindowBase.FMinWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgWindowBase.FMinHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgWindowBase.FCanvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TfpgWindowBase.HandleIsValid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgWindowBase.HandleIsValid.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.DoUpdateWindowPosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.DoUpdateWindowPosition.aleft">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.DoUpdateWindowPosition.atop">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.DoUpdateWindowPosition.awidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.DoUpdateWindowPosition.aheight">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.DoAllocateWindowHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.DoAllocateWindowHandle.AParent">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.DoReleaseWindowHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.DoSetWindowVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.DoSetWindowVisible.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.DoMoveWindow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.DoMoveWindow.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.DoMoveWindow.y">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TfpgWindowBase.DoWindowToScreen">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgWindowBase.DoWindowToScreen.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.DoWindowToScreen.ASource">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.DoWindowToScreen.AScreenPos">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.DoSetWindowTitle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.DoSetWindowTitle.ATitle">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.DoSetMouseCursor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.SetParent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.SetParent.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TfpgWindowBase.GetParent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgWindowBase.GetParent.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TfpgWindowBase.GetCanvas">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgWindowBase.GetCanvas.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.AllocateWindowHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.ReleaseWindowHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.SetWindowTitle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.SetWindowTitle.ATitle">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.SetHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.SetHeight.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TfpgWindowBase.SetWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.SetWidth.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TfpgWindowBase.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.Create.AOwner">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgWindowBase.AfterConstruction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgWindowBase.AdjustWindowStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgWindowBase.SetWindowParameters">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgWindowBase.Right">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgWindowBase.Right.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgWindowBase.Bottom">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgWindowBase.Bottom.Result">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgWindowBase.UpdateWindowPosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgWindowBase.MoveWindow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.MoveWindow.x">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.MoveWindow.y">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgWindowBase.WindowToScreen">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgWindowBase.WindowToScreen.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.WindowToScreen.ASource">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgWindowBase.WindowToScreen.AScreenPos">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgWindowBase.CaptureMouse">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TfpgWindowBase.ReleaseMouse">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgWindowBase.HasHandle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgWindowBase.WindowType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgWindowBase.WindowAttributes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgWindowBase.Left">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgWindowBase.Top">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgWindowBase.Width">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgWindowBase.Height">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgWindowBase.MinWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgWindowBase.MinHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgWindowBase.Canvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgWindowBase.Parent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgWindowBase.MouseCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TfpgApplicationBase">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgApplicationBase.FMainForm">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgApplicationBase.FTerminated">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TfpgApplicationBase.FTopModalForm">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TfpgApplicationBase.FIsInitialized">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TfpgApplicationBase.DoGetFontFaceList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgApplicationBase.DoGetFontFaceList.Result">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TfpgApplicationBase.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TfpgApplicationBase.Create.AParams">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TfpgApplicationBase.GetFontFaceList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TfpgApplicationBase.GetFontFaceList.Result">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgApplicationBase.IsInitialized">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgApplicationBase.TopModalForm">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgApplicationBase.MainForm">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TfpgApplicationBase.Terminated">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: default -->
      <element name="KeycodeToText">
        <short>Returns the text representation of a keycode.</short>
        <descr>This is mainly used for debugging, but could also be used for Menu Item keyboard
shortcuts etc.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="KeycodeToText.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="KeycodeToText.AKey">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="KeycodeToText.AShiftState">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="CheckClipboardKey">
        <short>Detects if the pressed keys represent a Clipboard key shortcut</short>
        <descr>Detects if the pressed keys represent a Clipboard key shortcut. If it does, it
returns the correct enum type detected.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="CheckClipboardKey.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="CheckClipboardKey.AKey">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="CheckClipboardKey.AShiftstate">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="fpgColorToRGBTriple">
        <short>Converts the TfpgColor to TRGBTriple type</short>
        <descr>This function converts the given TfpgColor into a TRGBTriple type.
</descr>
        <errors/>
        <seealso>
          <link id="TRGBTriple"/>
        </seealso>
      </element>
      <!-- function result Visibility: default -->
      <element name="fpgColorToRGBTriple.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="fpgColorToRGBTriple.AColor">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="RGBTripleTofpgColor">
        <short>Converts the TRGBTriple to TfpgColor type</short>
        <descr>This function converts the given TRGBTriple into a TfpgColor type.
</descr>
        <errors/>
        <seealso>
          <link id="TRGBTriple"/>
        </seealso>
      </element>
      <!-- function result Visibility: default -->
      <element name="RGBTripleTofpgColor.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="RGBTripleTofpgColor.AColor">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="fpgGetRed">
        <short>Returns the Red portion of a color value.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="fpgGetRed.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="fpgGetRed.AColor">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="fpgGetGreen">
        <short>Returns the Green portion of a color value.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="fpgGetGreen.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="fpgGetGreen.AColor">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="fpgGetBlue">
        <short>Returns the Blue portion of a color value.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="fpgGetBlue.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="fpgGetBlue.AColor">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="fpgGetAlpha">
        <short>Returns the Alpha portion of a color value.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="fpgGetAlpha.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="fpgGetAlpha.AColor">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="fpgGetAvgColor">
        <short>Calculates the average color using the two supplied</short>
        <descr>This function calculates and returns the average color by using AColor1 
and AColor2. The Alpha value also gets taken into account.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="fpgGetAvgColor.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="fpgGetAvgColor.AColor1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="fpgGetAvgColor.AColor2">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="PtInRect">
        <short>Returns true if APoint is inside ARect rectangle</short>
        <descr>This function is used to detect if the point APoint is inside the given
rectangle ARect.  If it is, the function returns True, otherwise False.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="PtInRect.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="PtInRect.ARect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="PtInRect.APoint">
        <short/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="SortRect">
        <short>Fixes the Top, Bottom and Left, Right to always represent a valid rectangle</short>
        <descr>This function fixes a rectangle so that the Left point is always smaller than the 
Right. And the Top is always smaller than the Bottom.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="SortRect.ARect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="SortRect.left">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="SortRect.top">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="SortRect.right">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="SortRect.bottom">
        <short/>
      </element>
      <element name="TfpgCanvasBase.DrawLineClipped">
        <short>Draws a line inside a clip rectangle</short>
        <descr>
          <p>
            <printshort id="TfpgCanvasBase.DrawLineClipped"/>. This procedure clips a line to the AClipRect boundaries and
 then calls the DrawLine procedure with the clipped coordinates.  If the line
 lies completely outside of the clip boundary, then the Line routine is not
 called.  This procedure uses the well known Cohen-Sutherland line clipping
 algorithm to clip each coordinate.
</p>
          <p>Use this if you did not what to change the Canvas.ClipRegion for some reason.
 For a detailed explanation see:  http://www.nondot.org/~sabre/graphpro/line6.html
</p>
        </descr>
      </element>
      <element name="TfpgCanvasBase.ClipLine">
        <short>Clips the line based on AClipRect boundaries.</short>
        <descr>This does not do any drawing, in only clips the line coordinates. This method is used internally by <link id="TfpgCanvasBase.DrawLineClipped"/>.</descr>
      </element>
    </module>
    <!-- gfxbase -->
  </package>
</fpdoc-descriptions>
